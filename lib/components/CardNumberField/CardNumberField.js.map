{"version":3,"sources":["../../../src/components/CardNumberField/CardNumberField.jsx"],"names":["AutoSuggestionHelper","tabKeycardType","configs","SKIDATA","placeholder","mask","pipe","value","slice","indexesOfPipedChars","TEAMAXESS","ALFI","CardNumberField","props","onSuggestionsFetchRequested","bind","onSuggestionsClearRequested","onSuggestionSelected","state","suggestions","listKeycards","getSuggestions","keycards","toJS","params","forEach","keycard","mode","setState","event","suggestion","cardnumber","shortnumber","onAutoSuggestSelected","inputProps","get","getSuggestionValue","renderSuggestion","renderInputComponent","handleChangeCardNumber","cardNumber","id","className","onChange","renderedCardNumberField","Component","propTypes","string","isRequired","func","object"],"mappings":"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","file":"CardNumberField.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport MaskedInput from 'react-text-mask';\nimport Autosuggest from 'react-autosuggest';\nimport * as AutoSuggestionHelper from '../../helpers/AutoSuggest/MaskedInputAutoSuggestHelper';\nimport * as tabKeycardType from '../../constants/keycardsType';\n// import './CardNumberField.scss';\n\nconst configs = {\n  SKIDATA: {\n    placeholder: '00-0000 0000 0000 0000 0000-0',\n    mask: [\n      /[0-3]/, /\\d/, '-',\n      /\\d/, /\\d/, /\\d/, /\\d/, ' ',\n      /\\d/, /\\d/, /\\d/, /\\d/, ' ',\n      /\\d/, /\\d/, /\\d/, /\\d/, ' ',\n      /\\d/, /\\d/, /\\d/, /\\d/, ' ',\n      /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/,\n    ],\n    pipe: (value => (value[0] === '1' ? { value: `01${value.slice(2)}`, indexesOfPipedChars: [0] } : value)),\n  },\n  TEAMAXESS: {\n    placeholder: 'XXXXXXXX-XXX-XXX',\n    mask: [\n      /[a-zA-Z0-9]/, /[a-zA-Z0-9]/, /[a-zA-Z0-9]/, /[a-zA-Z0-9]/,\n      /[a-zA-Z0-9]/, /[a-zA-Z0-9]/, /[a-zA-Z0-9]/, /[Aa-zA-Z0-9]/, '-',\n      /[a-zA-Z0-9]/, /[a-zA-Z0-9]/, /[a-zA-Z0-9]/, '-',\n      /[a-zA-Z0-9]/, /[a-zA-Z0-9]/, /[a-zA-Z0-9]/,\n    ],\n    pipe: value => (value[0] === '1' ? { value: `01${value.slice(2)}`, indexesOfPipedChars: [0] } : value),\n  },\n  ALFI: {\n    placeholder: '_____-_____-____',\n    mask: [\n      /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/, '-',\n      /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/, '-',\n      /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/,\n    ],\n  },\n  'GO-SKI': {\n    placeholder: '000000000-0',\n    mask: [\n      /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/, '-',\n      /[0-9]/,\n    ],\n  },\n};\n\nclass CardNumberField extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onSuggestionsFetchRequested = this.onSuggestionsFetchRequested.bind(this);\n    this.onSuggestionsClearRequested = this.onSuggestionsClearRequested.bind(this);\n    this.onSuggestionSelected = this.onSuggestionSelected.bind(this);\n\n    this.state = {\n      suggestions: [],\n    };\n  }\n\n  onSuggestionsFetchRequested({ value }) {\n    const listKeycards = AutoSuggestionHelper.getSuggestions(\n      value,\n      this.props.keycards.toJS(),\n      this.props.params,\n    );\n    // Add element type card for display suggestions\n    listKeycards.forEach((keycard) => {\n      keycard.mode = this.props.mode;\n    });\n\n    this.setState({\n      suggestions: listKeycards,\n    });\n  }\n\n  onSuggestionsClearRequested() {\n    this.setState({\n      suggestions: [],\n    });\n  }\n\n  onSuggestionSelected(event, { suggestion }) {\n    const cardnumber = suggestion.mode === tabKeycardType['open'] ? suggestion.shortnumber : suggestion.cardnumber ;\n    this.props.onAutoSuggestSelected(cardnumber);\n  }\n\n  renderedCardNumberField(mode, params, suggestions, inputProps) {\n    return (mode !== 'OPEN' && params.get('displayKeycardAutoComplete', false) === true\n        ? <Autosuggest\n          suggestions={suggestions}\n          onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n          onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n          onSuggestionSelected={this.onSuggestionSelected}\n          shouldRenderSuggestions={() => true}\n          getSuggestionValue={AutoSuggestionHelper.getSuggestionValue}\n          renderSuggestion={AutoSuggestionHelper.renderSuggestion}\n          inputProps={inputProps}\n          renderInputComponent={AutoSuggestionHelper.renderInputComponent}\n          focusInputOnSuggestionClick={false}\n        />\n        : <MaskedInput {...inputProps} />\n    );\n  }\n\n  render() {\n    const { suggestions } = this.state;\n    const { mode, handleChangeCardNumber, cardNumber, params } = this.props;\n    const inputProps = {\n      ...configs[mode],\n      id: cardNumber,\n      className: 'form-control text-left',\n      onChange: handleChangeCardNumber,\n      value: cardNumber,\n    };\n\n    return (\n      <div>\n        { this.renderedCardNumberField(mode, params, suggestions, inputProps) }\n      </div>\n    );\n  }\n}\n\nCardNumberField.propTypes = {\n  mode: PropTypes.string.isRequired,\n  handleChangeCardNumber: PropTypes.func.isRequired,\n  onAutoSuggestSelected: PropTypes.func.isRequired,\n  cardNumber: PropTypes.string.isRequired,\n  keycards: PropTypes.object.isRequired,\n  params: PropTypes.object.isRequired,\n};\n\nexport default CardNumberField;\n"]}