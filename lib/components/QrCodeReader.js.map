{"version":3,"sources":["../../src/components/QrCodeReader.jsx"],"names":["QrCodeReader","delay","setDelay","result","setResult","handleLoad","data","console","log","handleScan","handleError","error"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;AAEA;;;;;;;AAOA,IAAMA,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA,kBACC,qBAAS,GAAT,CADD;AAAA;AAAA,MAClBC,KADkB;AAAA,MACXC,QADW;;AAAA,mBAEG,qBAAS,UAAT,CAFH;AAAA;AAAA,MAElBC,MAFkB;AAAA,MAEVC,SAFU;;AAIzB,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,IAAI,EAAI;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,IAApB;AACD,GAFD;;AAIA,MAAMG,UAAU,GAAG,SAAbA,UAAa,CAAAH,IAAI,EAAI;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,IAApB;;AACA,QAAIA,IAAJ,EAAU;AACRF,MAAAA,SAAS,CAACE,IAAD,CAAT;AACD;AACF,GALD;;AAOA,MAAMI,WAAW,GAAG,SAAdA,WAAc,CAAAC,KAAK,EAAI;AAC3BJ,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBG,KAArB;AACAP,IAAAA,SAAS,CAAC,eAAD,CAAT;AACD,GAHD;;AAKA,sBACG;AAAK,IAAA,SAAS,EAAC;AAAf,kBACE,gCAAC,iBAAD,CAAO,UAAP,qBACE,gCAAC,yBAAD;AACG,IAAA,SAAS,EAAC,uBADb;AAEG,IAAA,KAAK,EAAEH,KAFV;AAGG,IAAA,MAAM,EAAEI,UAHX;AAIG,IAAA,OAAO,EAAEK,WAJZ;AAKG,IAAA,MAAM,EAAED,UALX;AAMG,IAAA,UAAU,EAAE,KANf;AAOG,IAAA,UAAU,EAAE;AAPf,IADF,EAWGN,MAAM,KAAK,UAAX,iBACC;AAAK,IAAA,SAAS,EAAC;AAAf,kBACE,gCAAC,oBAAD,OADF,eAEE;AAAK,IAAA,SAAS,EAAC;AAAf,KACGA,MADH,eAUI,0DACE;AAAG,IAAA,SAAS,EAAC;AAAb,uCADF,eAEE;AAAG,IAAA,SAAS,EAAC;AAAb,6CAFF,CAVJ,CAFF,CAZJ,CADF,CADH;AAoCD,CAxDD;;eA0DeH,Y","sourcesContent":["import React, { useState } from 'react';\nimport QrReader from 'react-qr-reader';\nimport SvgCross from '../icons/svgr/SvgCross';\n\n/**\n *\n *\n * @returns {*}\n *\n * @constructor\n */\nconst QrCodeReader = () => {\n  const [delay, setDelay] = useState(500);\n  const [result, setResult] = useState('noResult',);\n\n  const handleLoad = data => {\n    console.log('LOAD', data);\n  };\n\n  const handleScan = data => {\n    console.log('SCAN', data);\n    if (data) {\n      setResult(data);\n    }\n  };\n\n  const handleError = error => {\n    console.log('ERROR', error);\n    setResult('noDeviceFound');\n  };\n\n  return (\n     <div className=\"qrCodeReader\">\n       <React.StrictMode>\n         <QrReader\n            className=\"qrCodeReader__content\"\n            delay={delay}\n            onLoad={handleLoad}\n            onError={handleError}\n            onScan={handleScan}\n            legacyMode={false}\n            facingMode={\"user\"}\n         />\n\n         {result !== 'noResult' && (\n           <div className='qrCodeReader__message'>\n             <SvgCross />\n             <div className='qrCodeReader__message-error'>\n               {result}\n               {/*{result !== 'noResult' ? (*/}\n               {/*  <p className=\"qrCodeReader__message__description\">Webcam non prise en charge</p>*/}\n               {/*) : (*/}\n               {/*  <div>*/}\n               {/*    <p className=\"qrCodeReader__message__origin\">Code lu : http://www.lemonde.fr</p>*/}\n               {/*    <p className=\"qrCodeReader__message__description\">Ce code n'est pas valide, réesayer</p>*/}\n               {/*  </div>*/}\n               {/*)}*/}\n                 <div>\n                   <p className=\"qrCodeReader__message__origin\">Code lu : http://www.lemonde.fr</p>\n                   <p className=\"qrCodeReader__message__description\">Ce code n'est pas valide, réesayer</p>\n                 </div>\n             </div>\n           </div>\n         )}\n       </React.StrictMode>\n     </div>\n  );\n}\n\nexport default QrCodeReader;\n"],"file":"QrCodeReader.js"}