{"version":3,"sources":["../../../src/components/PopoverLink/PopoverLink.jsx"],"names":["PopoverLink","props","state","popoverLinkOpen","changeStatePopoverLinkOpen","bind","setState","popoverLink","get","__html","Component","propTypes","object","isRequired"],"mappings":";;;;;;;;AAAA;;;;AACA;;AACA;;;;;;;;;;AAEA;;;IAGMA,W;;;AACJ;;;;AAIA,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA,0HACXA,KADW;;AAGjB,UAAKC,KAAL,GAAa;AACXC,uBAAiB;AADN,KAAb;AAGA,UAAKC,0BAAL,GAAkC,MAAKA,0BAAL,CAAgCC,IAAhC,OAAlC;AANiB;AAOlB;;AAED;;;;;;;iDAG6B;AAC3B,WAAKC,QAAL,CAAc,EAAEH,iBAAiB,CAAC,KAAKD,KAAL,CAAWC,eAA/B,EAAd;AACD;;;6BAEQ;AACP,aACE;AAAA;AAAA,UAAK,WAAU,oBAAf;AACE;AAAA;AAAA,YAAG,MAAK,GAAR,EAAY,WAAU,aAAtB,EAAoC,IAAG,aAAvC,EAAqD,SAAS,KAAKC,0BAAnE;AACE;AAAA;AAAA;AAAO,iBAAKH,KAAL,CAAWM,WAAX,CAAuBC,GAAvB,CAA2B,kBAA3B;AAAP;AADF,SADF;AAIE;AAAA;AAAA,YAAS,WAAU,QAAnB,EAA4B,QAAQ,KAAKN,KAAL,CAAWC,eAA/C,EAAgE,QAAO,aAAvE,EAAqF,QAAQ,KAAKC,0BAAlG,EAA8H,WAAU,WAAxI;AACE;AAAA;AAAA,cAAe,WAAU,wBAAzB;AACG,iBAAKH,KAAL,CAAWM,WAAX,CAAuBC,GAAvB,CAA2B,yBAA3B;AADH,WADF;AAIE;AAAA;AAAA,cAAa,WAAU,wBAAvB;AACE;AAAA;AAAA,gBAAK,WAAU,KAAf;AACE;AAAA;AAAA,kBAAK,WAAU,UAAf;AACE,uDAAK,WAAU,gBAAf,EAAgC,KAAK,KAAKP,KAAL,CAAWM,WAAX,CAAuBC,GAAvB,CAA2B,gBAA3B,CAArC,EAAmF,KAAI,EAAvF;AADF,eADF;AAIE,qDAAK,WAAU,UAAf,EAA0B,yBAAyB,EAAEC,QAAQ,KAAKR,KAAL,CAAWM,WAAX,CAAuBC,GAAvB,CAA2B,iBAA3B,CAAV,EAAnD;AAJF;AADF;AAJF;AAJF,OADF;AAoBD;;;;EA1CuB,gBAAME,S;;AA6ChCV,YAAYW,SAAZ,GAAwB;AACtBJ,eAAa,qBAAUK,MAAV,CAAiBC,UADR,CACoB;AADpB,CAAxB;;kBAIeb,W","file":"PopoverLink.js","sourcesContent":["import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { Popover, PopoverHeader, PopoverBody } from 'reactstrap';\n\n/**\n * PopoverLink\n */\nclass PopoverLink extends React.Component {\n  /**\n   * Constructor\n   * @param props\n   */\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      popoverLinkOpen: false,\n    };\n    this.changeStatePopoverLinkOpen = this.changeStatePopoverLinkOpen.bind(this);\n  }\n\n  /**\n   * Change local state for open popover link\n   */\n  changeStatePopoverLinkOpen() {\n    this.setState({ popoverLinkOpen: !this.state.popoverLinkOpen });\n  }\n\n  render() {\n    return (\n      <div className=\"contentInfoKeycard\">\n        <a href=\"#\" className=\"infoKeyCard\" id=\"PopoverLink\" onClick={this.changeStatePopoverLinkOpen}>\n          <span>{this.props.popoverLink.get('labelKeycardInfo')}</span>\n        </a>\n        <Popover placement=\"bottom\" isOpen={this.state.popoverLinkOpen} target=\"PopoverLink\" toggle={this.changeStatePopoverLinkOpen} className=\"ppPopover\">\n          <PopoverHeader className=\"popover-title ppHeader\">\n            {this.props.popoverLink.get('popoverTitleKeycardInfo')}\n          </PopoverHeader>\n          <PopoverBody className=\"popover-content ppBody\">\n            <div className=\"row\">\n              <div className=\"col-xs-4\">\n                <img className=\"img-responsive\" src={this.props.popoverLink.get('picKeycardInfo')} alt=\"\" />\n              </div>\n              <div className=\"col-xs-8\" dangerouslySetInnerHTML={{ __html: this.props.popoverLink.get('descKeycardInfo') }} />\n            </div>\n          </PopoverBody>\n        </Popover>\n      </div>\n    );\n  }\n}\n\nPopoverLink.propTypes = {\n  popoverLink: PropTypes.object.isRequired, // content for popover info keycard\n};\n\nexport default PopoverLink;\n"]}