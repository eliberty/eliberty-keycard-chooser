{"version":3,"sources":["../../../src/components/KeyCardArea/KeyCardArea.jsx"],"names":["tabKeycardType","KeyCardArea","errorKey","localItemInfo","error","get","length","props","state","checkYes","hasSupport","checkNo","popoverQuestionOpen","popoverLinkOpen","typeKeyCard","handleChangeCardNumber","bind","handleChangeAutoSuggestCardNumber","changeStatePopoverOpen","changeStatePopoverLinkOpen","setState","onChangeCheck","event","cardId","card","target","value","cardnumber","suggest","newValue","forEach","item","key","keycards","updateKeycardsMask","orderitem","changeCardNumber","index","reg","RegExp","cardNumber","replace","formatMessage","intl","errorLabel","id","defaultMessage","currentId","sd","updateFieldsErrors","ta","alfi","open","popoverLink","__html","keycardTypes","params","renderedListKeyCard","renderedLabelLinkPopover","size","map","renderedLabelTab","renderedSomeInputKeyCards","renderedOneInputKeyCard","lengthKeycard","verifyLengthKeycard","deleteKeyFieldsErrors","toUpperCase","renderedErrorInputMessage","className","aux","itemFieldsDefinition","popover","checkSupportYes","checkSupportNo","questionImageSvg","handleClickCheckYes","handleClickCheckNo","renderedContentCheckYes","renderedContentCheckNo","Component","propTypes","object","isRequired","func","bool"],"mappings":"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","file":"KeyCardArea.js","sourcesContent":["import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { Map } from 'immutable';\nimport { FormattedMessage, injectIntl, intlShape } from 'react-intl';\nimport { Button, Popover, PopoverHeader, PopoverBody } from 'reactstrap';\nimport CardNumberField from '../CardNumberField/CardNumberField';\nimport * as tabKeycardType from '../../constants/keycardsType';\n// import './keyCardArea.scss';\n\n/**\n * Keycard area\n */\nclass KeyCardArea extends React.Component {\n  /**\n   * Display Error Message\n   * @param errorKey\n   * @param localItemInfo\n   * @returns {*}\n   */\n  static renderedErrorInputMessage(errorKey, localItemInfo) {\n    const error = localItemInfo.get('errors', new Map()).get(errorKey, '');\n\n    return error.length === 0\n      ? null\n      : <span className=\"errorInputKeyCard\">{error}</span>;\n  }\n\n  /**\n   * Constructor\n   * @param props\n   */\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      checkYes: !props.hasSupport,\n      checkNo: props.hasSupport,\n      popoverQuestionOpen: false,\n      popoverLinkOpen: false,\n      hasSupport: props.hasSupport,\n      typeKeyCard: '',\n    };\n    this.handleChangeCardNumber = this.handleChangeCardNumber.bind(this);\n    this.handleChangeAutoSuggestCardNumber = this.handleChangeAutoSuggestCardNumber.bind(this);\n    this.changeStatePopoverOpen = this.changeStatePopoverOpen.bind(this);\n    this.changeStatePopoverLinkOpen = this.changeStatePopoverLinkOpen.bind(this);\n  }\n\n  /**\n   * Change local state when click on yes\n   */\n  handleClickCheckYes() {\n    this.setState({\n      checkYes: true,\n      checkNo: false,\n      hasSupport: false,\n    });\n    this.props.onChangeCheck('yes');\n  }\n\n  /**\n   * Change local state when click on no\n   */\n  handleClickCheckNo() {\n    this.setState({\n      checkYes: false,\n      checkNo: true,\n      hasSupport: true,\n    });\n    this.props.onChangeCheck('no');\n  }\n\n  /**\n   * Change local state for open popover question\n   */\n  changeStatePopoverOpen() {\n    this.setState({ popoverQuestionOpen: !this.state.popoverQuestionOpen });\n  }\n\n  /**\n   * Change local state for open popover link\n   */\n  changeStatePopoverLinkOpen() {\n    this.setState({ popoverLinkOpen: !this.state.popoverLinkOpen });\n  }\n\n  /**\n   * Change card number\n   * @param event\n   * @param cardId\n   */\n  handleChangeCardNumber(event, cardId, card) {\n    this.handleChangeAutoSuggestCardNumber(event.target.value, cardId, card, false);\n  }\n\n  /**\n   *\n   * @param cardnumber\n   * @param cardId\n   */\n  handleChangeAutoSuggestCardNumber(cardnumber, cardId, card, suggest = true) {\n    let newValue = '';\n    this.props.localItemInfo.get('keycardsMask').forEach((item, key) => {\n      if (key !== 'current' && key !== 'idCard' && key !== card) {\n        if (suggest) {\n          this.props.keycards.forEach((item, key) => {\n            if (item.get('shortnumber') === cardnumber || item.get('cardnumber') === cardnumber) {\n              newValue = card === 'sd' ? item.get('shortnumber') : item.get('cardnumber');\n            }\n          });\n          this.props.updateKeycardsMask(this.props.orderitem.get('id'), key, newValue);\n        } else {\n          this.props.updateKeycardsMask(this.props.orderitem.get('id'), key, newValue);\n        }\n      }\n    });\n\n    if (typeof cardnumber !== 'undefined') {\n      this.props.changeCardNumber(this.props.orderitem.get('id'), cardnumber);\n      this.props.updateKeycardsMask(this.props.orderitem.get('id'), card, cardnumber);\n    }\n  }\n\n  /**\n   * Function to check the length of the card number entered according to the type of card\n   * @param cardNumber\n   * @param index\n   * @param card\n   * @returns {boolean}\n   */\n  verifyLengthKeycard(cardnumber, index, card) {\n    const reg = new RegExp(/( )|(_)/g);\n    const cardNumber = cardnumber.replace(reg, '');\n    const errorKey = 'data.cardNumber';\n    const { formatMessage } = this.props.intl;\n    const errorLabel = formatMessage({ id: 'rp.checkout.customize.cardnumber.length', defaultMessage: 'no lenght' });\n    const currentId = this.props.localItemInfo.get('id');\n\n    // verification the card type\n    switch (card) {\n      case tabKeycardType.sd: {\n        if (cardNumber.length < 25) {\n          this.props.updateFieldsErrors(currentId, errorKey, errorLabel);\n          return false;\n        }\n        break;\n      }\n      case tabKeycardType.ta:\n      case tabKeycardType.alfi: {\n        if (cardNumber.length < 16) {\n          this.props.updateFieldsErrors(currentId, errorKey, errorLabel);\n          return false;\n        }\n        break;\n      }\n      case tabKeycardType.open: {\n        if (cardNumber.length < 11) {\n          this.props.updateFieldsErrors(currentId, errorKey, errorLabel);\n          return false;\n        }\n        break;\n      }\n      default: { break; }\n    }\n    return true;\n  }\n\n\n  /**\n   * Display picture question\n   * @returns {XML}\n   */\n  questionImageSvg() {\n    return (\n      <svg\n        x=\"0px\"\n        y=\"0px\"\n        width=\"15px\"\n        height=\"15px\"\n        viewBox=\"0 0 612 612\"\n        fill=\"#B8B8B8\"\n      >\n        <g>\n          <g>\n            <path d=\"M230.724,181.208c-2.393,2.587-3.95,4.256-5.119,5.508C227.775,184.379,230.724,181.208,230.724,181.208z\" />\n            <path d=\"M336.962,200.875c7.956,9.792,11.906,21.337,11.906,34.634c0,9.514-2.727,18.666-8.151,27.512\n              c-2.977,5.007-6.898,9.848-11.795,14.465l-16.301,16.107c-15.634,15.356-25.732,28.958-30.35,40.865\n              c-4.618,11.878-6.927,27.54-6.927,46.957h36.275c0-17.108,1.947-30.044,5.814-38.807c3.866-8.763,12.323-19.444,25.37-32.102\n              c17.942-17.387,29.849-30.572,35.746-39.53s8.874-20.641,8.874-35.051c0-23.756-8.039-43.285-24.146-58.585\n              c-16.106-15.3-37.526-22.922-64.288-22.922c-28.931,0-51.686,8.929-68.266,26.789s-24.87,41.449-24.87,70.797h36.275\n              c0.667-17.665,3.478-31.184,8.346-40.559c8.679-16.83,24.369-25.259,47.068-25.259\n              C315.875,186.187,329.033,191.083,336.962,200.875z\" />\n            <path d=\"M612,306C612,137.004,474.995,0,306,0C137.004,0,0,137.004,0,306c0,168.995,137.004,306,306,306\n              C474.995,612,612,474.995,612,306z M27.818,306C27.818,152.36,152.36,27.818,306,27.818S584.182,152.36,584.182,306\n              S459.64,584.182,306,584.182S27.818,459.64,27.818,306z\" />\n            <rect x=\"274.51\" y=\"415.214\" width=\"40.559\" height=\"42.367\" />\n          </g>\n        </g>\n      </svg>\n    );\n  }\n\n  /**\n   * Content for popover link\n   * @returns {*}\n   */\n  renderedLabelLinkPopover() {\n    return this.props.popoverLink.get('labelKeycardInfo') !== null\n      ?\n      (\n        <div>\n          <a href=\"#\" className=\"infoKeyCard\" id=\"PopoverLink\" onClick={this.changeStatePopoverLinkOpen}>\n            <span>{this.props.popoverLink.get('labelKeycardInfo')}</span>\n          </a>\n          <Popover placement=\"bottom\" isOpen={this.state.popoverLinkOpen} target=\"PopoverLink\" toggle={this.changeStatePopoverLinkOpen} className=\"ppPopover\">\n            <PopoverHeader className=\"popover-title ppHeader\">\n              {this.props.popoverLink.get('popoverTitleKeycardInfo')}\n            </PopoverHeader>\n            <PopoverBody className=\"popover-content ppBody\">\n              <div className=\"row\">\n                <div className=\"col-xs-4\">\n                  <img className=\"img-responsive\" src={this.props.popoverLink.get('picKeycardInfo')} alt=\"\" />\n                </div>\n                <div className=\"col-xs-8\" dangerouslySetInnerHTML={{ __html: this.props.popoverLink.get('descKeycardInfo') }} />\n              </div>\n            </PopoverBody>\n          </Popover>\n        </div>\n      )\n      : '';\n  }\n\n  /**\n   *\n   * @param keycardTypes\n   * @param keycards\n   * @param params\n   * @returns {*}\n   */\n  renderedContentCheckYes(keycardTypes, keycards, params) {\n    return (this.state.checkYes\n        ?\n        (\n          <div className=\"msgCheckYes\">\n            { this.renderedListKeyCard(keycardTypes, keycards, params) }\n            { this.renderedLabelLinkPopover() }\n          </div>\n        )\n        : ''\n    );\n  }\n\n  /**\n   *\n   * @param keycardTypes\n   * @param keycards\n   * @param params\n   * @returns {XML}\n   */\n  renderedListKeyCard(keycardTypes, keycards, params) {\n    return (keycardTypes.size > 1\n        ?\n        (\n          <div>\n            <ul className=\"nav nav-tabs nav-justified responsive-tabs\" role=\"tablist\">\n              { keycardTypes.map((card, index) => (\n                this.renderedLabelTab(tabKeycardType[card], index)\n              )) }\n            </ul>\n            <div className=\"tab-content\">\n              {\n                keycardTypes.map((card, index) => (\n                  this.renderedSomeInputKeyCards(card, index, keycards, params)\n                ))\n              }\n            </div>\n          </div>\n        )\n        :\n        keycardTypes.map((card, index) => (\n          this.renderedOneInputKeyCard(card, index, keycards, params)\n        ))\n    );\n  }\n\n  /**\n   *\n   * @param card\n   * @param index\n   * @param keycards\n   * @param params\n   * @returns {XML}\n   */\n  renderedOneInputKeyCard(card, index, keycards, params) {\n    let lengthKeycard = false;\n    const errorKey = 'data.cardNumber';\n    const { formatMessage } = this.props.intl;\n    const errorLabel = formatMessage({ id: 'rp.checkout.message.error.input.empty', defaultMessage: 'empty' });\n    const currentId = this.props.localItemInfo.get('id');\n    const cardNumber = this.props.localItemInfo.get('keycardsMask').get(card);\n\n    this.props.updateKeycardsMask(currentId, 'current', card);\n\n    if (cardNumber !== '') {\n      lengthKeycard = this.verifyLengthKeycard(cardNumber, index, tabKeycardType[card]);\n\n      if (lengthKeycard === true) {\n        this.props.deleteKeyFieldsErrors(currentId, errorKey);\n      }\n    } else {\n      this.props.updateFieldsErrors(currentId, errorKey, errorLabel);\n    }\n\n    return (\n      <div>\n        <CardNumberField\n          key={index}\n          id={index}\n          mode={tabKeycardType[card]}\n          keycards={keycards}\n          handleChangeCardNumber={(event) => {\n            this.handleChangeCardNumber(event, index, card);\n          }}\n          onChange={(event) => {\n            this.handleChangeCardNumber(event, index, card);\n          }}\n          onAutoSuggestSelected={(cardnumber) => {\n            this.handleChangeAutoSuggestCardNumber(cardnumber, index, card);\n          }}\n          cardNumber={cardNumber.toUpperCase()}\n          value={cardNumber}\n          params={params}\n        />\n        { cardNumber === '' || lengthKeycard === false ? KeyCardArea.renderedErrorInputMessage(errorKey, this.props.localItemInfo) : '' }\n      </div>\n    );\n  }\n\n  /**\n   * Display of the double input mask\n   * @param card\n   * @param index\n   * @param keycards\n   * @param params\n   * @returns {XML}\n   */\n  renderedSomeInputKeyCards(card, index, keycards, params) {\n    let className = 'tab-pane fade in';\n    const lengthKeycard = false;\n    const aux = `tabKeycardType[card]${index}`;\n    const errorKey = 'data.cardNumber';\n    const { formatMessage } = this.props.intl;\n    const errorLabel = formatMessage({ id: 'rp.checkout.message.error.input.empty', defaultMessage: 'empty' });\n    const currentId = this.props.localItemInfo.get('id');\n    let cardNumber = this.props.localItemInfo.get('keycardsMask').get(card);\n\n    if (cardNumber === null) {\n      cardNumber = '';\n    }\n\n    if (index === this.props.localItemInfo.get('keycardsMask').get('idCard')) {\n      className = `${className} active`;\n\n      if (cardNumber !== '') {\n        if (this.verifyLengthKeycard(cardNumber, index, tabKeycardType[card])) {\n          this.props.deleteKeyFieldsErrors(currentId, errorKey);\n        }\n      } else {\n        this.props.updateFieldsErrors(currentId, errorKey, errorLabel);\n      }\n\n      this.props.changeCardNumber(currentId, cardNumber);\n      this.props.updateKeycardsMask(currentId, 'current', card);\n    }\n\n    return (\n      <div className={className} id={aux} role=\"tabpanel\" key={index}>\n        <CardNumberField\n          key={index}\n          id={index}\n          mode={tabKeycardType[card]}\n          keycards={keycards}\n          handleChangeCardNumber={(event) => {\n            this.handleChangeCardNumber(event, index, card);\n          }}\n          onChange={(event) => {\n            this.handleChangeCardNumber(event, index, card);\n          }}\n          onAutoSuggestSelected={(cardnumber) => {\n            this.handleChangeAutoSuggestCardNumber(cardnumber, index, card);\n          }}\n          cardNumber={cardNumber}\n          value={cardNumber}\n          params={params}\n        />\n        { cardNumber === '' || lengthKeycard === false ? KeyCardArea.renderedErrorInputMessage(errorKey, this.props.localItemInfo) : '' }\n      </div>\n    );\n  }\n\n\n  /**\n   * Display labels for inputs - select active input\n   * @param card\n   * @param index\n   * @returns {XML}\n   */\n  renderedLabelTab(card, index) {\n    const aux = `card${index}`;\n    let className = 'nav-item';\n\n    if (index === this.props.localItemInfo.get('keycardsMask').get('idCard')) {\n      className = `${className} active`;\n    }\n\n    return (\n      <li className={className} key={index}>\n        <a\n          className=\"nav-link text-center\"\n          data-toggle=\"tab\"\n          role=\"tab\"\n          href={aux}\n          onClick={() => {\n            this.props.updateKeycardsMask(this.props.localItemInfo.get('id'), 'idCard', index);\n          }}\n        >{card}</a>\n      </li>\n    );\n  }\n\n\n  /**\n   * Display content checked no\n   * @returns {*}\n   */\n  renderedContentCheckNo() {\n    return (this.state.checkNo\n        ? (\n          <div className=\"msgCheckNo\">\n            <p>\n              <FormattedMessage id=\"rp.checkout.ordercustom.nokeycard\" defaultMessage=\"no card\" />\n            </p>\n          </div>\n        )\n        : ''\n    );\n  }\n\n\n  render() {\n    const { keycardTypes, keycards, params, itemFieldsDefinition, popover } = this.props;\n    const { hasSupport } = this.state;\n\n    let checkSupportYes = '';\n    let checkSupportNo = '';\n    if (hasSupport) {\n      checkSupportNo = 'checked';\n    } else {\n      checkSupportYes = 'checked';\n    }\n\n    return (\n      <div>\n        <div className=\"blockPopover\">\n          <p><FormattedMessage id=\"rp.checkout.keycard.area.question\" defaultMessage=\"I have a card\" /></p>\n          <div className=\"contentPopover\">\n            <Button type=\"button\" id=\"Popover1\" className=\"contentQuestion\" onClick={this.changeStatePopoverOpen}>\n              {this.questionImageSvg()}\n            </Button>\n            <Popover placement=\"bottom\" isOpen={this.state.popoverQuestionOpen} target=\"Popover1\" toggle={this.changeStatePopoverOpen} className=\"ppPopover\">\n              <PopoverHeader className=\"popover-title ppHeader\">\n                {popover.get('keycardTitle')}\n              </PopoverHeader>\n              <PopoverBody className=\"popover-content ppBody\">\n                <div className=\"row\">\n                  <div className=\"col-xs-4\">\n                    <img className=\"img-responsive\" src={popover.get('keycardPicture')} alt=\"keycardinfo\" />\n                  </div>\n                  <div className=\"col-xs-8\" dangerouslySetInnerHTML={{ __html: popover.get('keycardContent') }} />\n                </div>\n              </PopoverBody>\n            </Popover>\n          </div>\n          <form>\n            <div className=\"form-group keyCardAreaForm\">\n              {itemFieldsDefinition.get('keycard').get('forceReloading') === false ?\n                (\n                  <div>\n                    <input type=\"radio\" id={`inputCheckYes${this.props.orderitem.get('id')}`} name=\"card\" checked={checkSupportYes} value=\"yes\" onChange={() => { this.handleClickCheckYes(); }} />\n                    <label htmlFor={`inputCheckYes${this.props.orderitem.get('id')}`} className=\"keycardChoice\"><FormattedMessage id=\"rp.checkout.keycard.area.reponse.yes\" defaultMessage=\"yes\" /></label>\n                    <input type=\"radio\" id={`inputCheckNo${this.props.orderitem.get('id')}`} name=\"card\" value=\"non\" checked={checkSupportNo} onChange={() => { this.handleClickCheckNo(); }} />\n                    <label htmlFor={`inputCheckNo${this.props.orderitem.get('id')}`} className=\"keycardChoice\"><FormattedMessage id=\"rp.checkout.keycard.area.reponse.no\" defaultMessage=\"no\" /></label>\n                  </div>\n                )\n                : this.renderedContentCheckYes(keycardTypes, keycards, params)\n              }\n\n              { this.renderedContentCheckNo() }\n              { this.renderedContentCheckYes(keycardTypes, keycards, params) }\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nKeyCardArea.propTypes = {\n  keycardTypes: PropTypes.object.isRequired, // keycards to display the tabs\n  keycards: PropTypes.object.isRequired,\n  params: PropTypes.object.isRequired, // generic params\n  orderitem: PropTypes.object.isRequired,\n  itemFieldsDefinition: PropTypes.object.isRequired,\n  popover: PropTypes.object.isRequired, // content for popover info keycard\n  popoverLink: PropTypes.object.isRequired, // content for popover link keycard\n  localItemInfo: PropTypes.object.isRequired, // current local Item\n  changeCardNumber: PropTypes.func.isRequired, // function to change cardnumber of item\n  onChangeCheck: PropTypes.func.isRequired, // function to make changes when checking\n  updateFieldsErrors: PropTypes.func.isRequired, // function to update fields errors\n  deleteKeyFieldsErrors: PropTypes.func.isRequired, // function to delete key on fields errors\n  updateKeycardsMask: PropTypes.func.isRequired, // function to update elements on a keycardsMask\n  hasSupport: PropTypes.bool.isRequired, // boolean to know if support exists\n  intl: intlShape.isRequired, // for the internationalization\n};\n\nexport default injectIntl(KeyCardArea);\n"]}