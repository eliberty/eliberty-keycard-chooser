{"version":3,"sources":["../../../src/components/KeyCardArea/KeyCardArea.jsx"],"names":["KeyCardArea","props","state","checkYes","checkNo","idCard","cardNumberList","handleClickCheckYes","bind","handleClickCheckNo","handleChangeCardNumber","handleChangeAutoSuggestCardNumber","setState","event","cardId","target","value","cardnumber","substr","set","changeCardNumber","orderitem","get","card","aux","className","keycards","params","cardNumber","toUpperCase","keycardTypes","size","map","renderedLabelTab","renderedKeyCardsTypesSome","renderedKeyCardsTypesOne","renderedListKeyCard","questionImageSvg","renderedContentCheckNo","renderedContentCheckYes","Component","propTypes","object","isRequired","func","intl"],"mappings":"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","file":"KeyCardArea.js","sourcesContent":["import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { Map } from 'immutable';\nimport { FormattedMessage, injectIntl, intlShape } from 'react-intl';\nimport CardNumberField from '../CardNumberField/CardNumberField';\nimport './keyCardArea.scss';\n\n/**\n * Keycard area\n */\nclass KeyCardArea extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      checkYes: false,\n      checkNo: false,\n      idCard: 0,\n      cardNumberList: new Map(),\n    };\n    this.handleClickCheckYes = this.handleClickCheckYes.bind(this);\n    this.handleClickCheckNo = this.handleClickCheckNo.bind(this);\n    this.handleChangeCardNumber = this.handleChangeCardNumber.bind(this);\n    this.handleChangeAutoSuggestCardNumber = this.handleChangeAutoSuggestCardNumber.bind(this);\n  }\n\n  handleClickCheckYes() {\n    this.setState({\n      checkYes: true,\n      checkNo: false,\n    });\n  }\n\n  handleClickCheckNo() {\n    this.setState({\n      checkYes: false,\n      checkNo: true,\n    });\n  }\n\n  handleChangeCardNumber(event, cardId) {\n    this.handleChangeAutoSuggestCardNumber(event.target.value, cardId);\n  }\n\n  handleChangeAutoSuggestCardNumber(cardnumber, cardId) {\n    if (typeof cardnumber !== 'undefined') {\n      let cardNumberList = this.state.cardNumberList;\n\n      if (cardnumber.substr(0, 1) !== '_') {\n        cardNumberList = new Map();\n      }\n\n      cardNumberList = cardNumberList.set(cardId, cardnumber);\n      this.setState({ cardNumberList });\n      this.props.changeCardNumber(this.props.orderitem.get('id'), cardnumber);\n    }\n  }\n\n  renderedContentCheckNo() {\n    return (this.state.checkNo\n        ?\n        (\n          <div className=\"msgCheckNo\">\n            <p>\n              <FormattedMessage id=\"rp.checkout.keycard.area.message.no.card\" defaultMessage=\"no card\" />\n            </p>\n          </div>\n        )\n        : ''\n    );\n  }\n\n  renderedLabelTab(card) {\n    const aux = `card${card.get('id')}`;\n    let className = 'nav-item';\n\n    if (card.get('id') === this.state.idCard) {\n      className = `${className} active`;\n    }\n\n    return (\n      <li className={className} key={card.get('id')}>\n        <a\n          className=\"nav-link text-center\"\n          data-toggle=\"tab\"\n          role=\"tab\"\n          href={aux}\n          onClick={() => {\n            this.setState({\n              idCard: card.get('id'),\n            });\n          }}\n        >{card.get('label')}</a>\n      </li>\n    );\n  }\n\n  renderedKeyCardsTypesSome(card, cardNumberList, keycards, params) {\n    const aux = `card${card.get('id')}`;\n    let className = 'tab-pane fade in';\n    if (card.get('id') === this.state.idCard) {\n      className = `${className} active`;\n    }\n    const cardNumber = cardNumberList.get(card.get('id'), '');\n    return (\n      <div className={className} id={aux} role=\"tabpanel\" key={card.get('id')}>\n        <CardNumberField\n          id={card.get('id')}\n          mode={card.get('type').toUpperCase()}\n          keycards={keycards}\n          handleChangeCardNumber={(event) => {\n            this.handleChangeCardNumber(event, card.get('id'));\n          }}\n          onChange={(event) => {\n            this.handleChangeCardNumber(event, card.get('id'));\n          }}\n          onAutoSuggestSelected={(cardnumber) => {\n            this.handleChangeAutoSuggestCardNumber(cardnumber, card.get('id'));\n          }}\n          cardNumber={cardNumber.toUpperCase()}\n          value={cardNumber}\n          params={params}\n        />\n      </div>\n    );\n  }\n\n  renderedKeyCardsTypesOne(card, cardNumberList, params) {\n    const cardNumber = cardNumberList.get(card.get('id'), '');\n    return (\n      <CardNumberField\n        id={card.get('id')}\n        mode={card.get('type').toUpperCase()}\n        handleChangeCardNumber={(event) => {\n          this.handleChangeCardNumber(event, card.get('id'));\n        }}\n        onChange={(event) => {\n          this.handleChangeCardNumber(event, card.get('id'));\n        }}\n        onAutoSuggestSelected={(cardnumber) => {\n          this.handleChangeAutoSuggestCardNumber(cardnumber, card.get('id'));\n        }}\n        cardNumber={cardNumber.toUpperCase()}\n        value={cardNumber}\n        params={params}\n      />\n    );\n  }\n\n  renderedListKeyCard(keycardTypes, cardNumberList, keycards, params) {\n    return (keycardTypes.size > 1\n        ?\n        (\n          <div>\n            <ul className=\"nav nav-tabs nav-justified responsive-tabs\" role=\"tablist\">\n              {\n                keycardTypes.map(card => (this.renderedLabelTab(card)))\n              }\n            </ul>\n            <div className=\"tab-content\">\n              {\n                keycardTypes.map(card => (\n                  this.renderedKeyCardsTypesSome(card, cardNumberList, keycards, params)))\n              }\n            </div>\n          </div>\n        )\n        :\n        (\n          keycardTypes.map(card => (\n            this.renderedKeyCardsTypesOne(card, cardNumberList, params)))\n        )\n    );\n  }\n\n  renderedContentCheckYes(keycardTypes, cardNumberList, keycards, params) {\n    return (this.state.checkYes\n        ? (\n          <div className=\"msgCheckYes\">\n            { this.renderedListKeyCard(keycardTypes, cardNumberList, keycards, params) }\n            <a href=\"#\" className=\"infoKeyCard\">\n              <span><FormattedMessage id=\"rp.checkout.keycard.area.link.number.card\" defaultMessage=\"number card\" /></span>\n            </a>\n          </div>\n        ) : ''\n    );\n  }\n\n  questionImageSvg() {\n    return (\n      <svg x=\"0px\"\n           y=\"0px\"\n           width=\"15px\"\n           height=\"15px\"\n           viewBox=\"0 0 612 612\"\n           fill=\"#B8B8B8\"\n      >\n        <g>\n          <g>\n            <path d=\"M230.724,181.208c-2.393,2.587-3.95,4.256-5.119,5.508C227.775,184.379,230.724,181.208,230.724,181.208z\"/>\n            <path d=\"M336.962,200.875c7.956,9.792,11.906,21.337,11.906,34.634c0,9.514-2.727,18.666-8.151,27.512\n              c-2.977,5.007-6.898,9.848-11.795,14.465l-16.301,16.107c-15.634,15.356-25.732,28.958-30.35,40.865\n              c-4.618,11.878-6.927,27.54-6.927,46.957h36.275c0-17.108,1.947-30.044,5.814-38.807c3.866-8.763,12.323-19.444,25.37-32.102\n              c17.942-17.387,29.849-30.572,35.746-39.53s8.874-20.641,8.874-35.051c0-23.756-8.039-43.285-24.146-58.585\n              c-16.106-15.3-37.526-22.922-64.288-22.922c-28.931,0-51.686,8.929-68.266,26.789s-24.87,41.449-24.87,70.797h36.275\n              c0.667-17.665,3.478-31.184,8.346-40.559c8.679-16.83,24.369-25.259,47.068-25.259\n              C315.875,186.187,329.033,191.083,336.962,200.875z\"/>\n            <path d=\"M612,306C612,137.004,474.995,0,306,0C137.004,0,0,137.004,0,306c0,168.995,137.004,306,306,306\n              C474.995,612,612,474.995,612,306z M27.818,306C27.818,152.36,152.36,27.818,306,27.818S584.182,152.36,584.182,306\n              S459.64,584.182,306,584.182S27.818,459.64,27.818,306z\"/>\n            <rect x=\"274.51\" y=\"415.214\" width=\"40.559\" height=\"42.367\"/>\n          </g>\n        </g>\n      </svg>\n    );\n  }\n\n  render() {\n    const { keycardTypes, keycards, params } = this.props;\n    const { cardNumberList } = this.state;\n\n    return (\n      <div>\n        <div>\n          <p><FormattedMessage id=\"rp.checkout.keycard.area.question\" defaultMessage=\"I have a card\" /></p>\n          <button type=\"button\" className=\"contentQuestion\" data-toggle=\"modal\" data-target=\"\">\n            {this.questionImageSvg()}\n          </button>\n          <form>\n            <div className=\"form-group keyCardAreaForm\">\n              <input type=\"radio\" id=\"inputCheckOui\" name=\"card\" value=\"oui\" onClick={() => { this.handleClickCheckYes(); }} />\n              <label htmlFor=\"inputCheckOui\" className=\"keycardChoice\"><FormattedMessage id=\"rp.checkout.keycard.area.reponse.yes\" defaultMessage=\"yes\" /></label>\n              <input type=\"radio\" id=\"inputCheckNo\" name=\"card\" value=\"non\" onClick={() => { this.handleClickCheckNo(); }} />\n              <label htmlFor=\"inputCheckNo\" className=\"keycardChoice\"><FormattedMessage id=\"rp.checkout.keycard.area.reponse.no\" defaultMessage=\"no\" /></label>\n              { this.renderedContentCheckNo() }\n              { this.renderedContentCheckYes(keycardTypes, cardNumberList, keycards, params) }\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nKeyCardArea.propTypes = {\n  keycardTypes: PropTypes.object.isRequired, // keycards to display the tabs\n  cardNumberList: PropTypes.object.isRequired,\n  keycards: PropTypes.object.isRequired,\n  params: PropTypes.object.isRequired, // generic params\n  orderitem: PropTypes.object.isRequired,\n  changeCardNumber: PropTypes.func.isRequired, // function to change cardnumber of item\n  intl: intlShape.isRequired, // for the internationalization\n};\n\nexport default injectIntl(KeyCardArea);\n"]}