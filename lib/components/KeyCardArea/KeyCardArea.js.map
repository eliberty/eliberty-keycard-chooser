{"version":3,"sources":["../../../src/components/KeyCardArea/KeyCardArea.jsx"],"names":["tabKeycardType","KeyCardArea","errorKey","localItemInfo","error","get","length","props","state","checkYes","hasSupport","checkNo","idCard","cardNumberList","popoverOpen","popover2Open","typeKeyCard","handleChangeCardNumber","bind","handleChangeAutoSuggestCardNumber","changeStatePopoverOpen","changeStatePopoverLinkOpen","setState","onChangeCheck","event","cardId","target","value","cardnumber","set","changeCardNumber","orderitem","card","index","aux","className","reg","RegExp","cardNumber","replace","formatMessage","intl","errorLabel","id","defaultMessage","sd","updateFieldsErrors","ta","alfi","open","keycards","params","lengthKeycard","verifyLengthKeycard","deleteKeyFieldsErrors","setTypeCard","renderedErrorInputMessage","toUpperCase","keycardTypes","size","map","renderedLabelTab","renderedSomeInputKeyCards","renderedOneInputKeyCard","renderedListKeyCard","renderedLabelLinkPopover","popoverLink","__html","itemFieldsDefinition","popover","checkSupportYes","checkSupportNo","questionImageSvg","handleClickCheckYes","handleClickCheckNo","renderedContentCheckYes","renderedContentCheckNo","Component","propTypes","object","isRequired","func","bool"],"mappings":"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","file":"KeyCardArea.js","sourcesContent":["import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { Map } from 'immutable';\nimport { FormattedMessage, injectIntl, intlShape } from 'react-intl';\nimport { Button, Popover, PopoverHeader, PopoverBody } from 'reactstrap';\nimport CardNumberField from '../CardNumberField/CardNumberField';\nimport * as tabKeycardType from '../../constants/keycardsType';\n// import './keyCardArea.scss';\n\n/**\n * Keycard area\n */\nclass KeyCardArea extends React.Component {\n  /**\n   *\n   * @param errorKey\n   * @param localItemInfo\n   * @returns {*}\n   */\n  static renderedErrorInputMessage(errorKey, localItemInfo) {\n\n    const error = localItemInfo.get('errors', new Map()).get(errorKey, '');\n\n    return error.length === 0\n      ? null\n      : <span className=\"errorInputKeyCard\">{error}</span>;\n  }\n\n  /**\n   *\n   * @param props\n   */\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      checkYes: !props.hasSupport,\n      checkNo : props.hasSupport,\n      idCard: 0,\n      cardNumberList: new Map(),\n      popoverOpen: false,\n      popover2Open: false,\n      hasSupport: props.hasSupport,\n      typeKeyCard: '',\n    };\n\n    //this.handleClickCheckYes = this.handleClickCheckYes.bind(this);\n    //this.handleClickCheckNo = this.handleClickCheckNo.bind(this);\n    this.handleChangeCardNumber = this.handleChangeCardNumber.bind(this);\n    this.handleChangeAutoSuggestCardNumber = this.handleChangeAutoSuggestCardNumber.bind(this);\n    this.changeStatePopoverOpen = this.changeStatePopoverOpen.bind(this);\n    this.changeStatePopoverLinkOpen = this.changeStatePopoverLinkOpen.bind(this);\n  }\n\n  handleClickCheckYes() {\n    this.setState({\n      checkYes: true,\n      checkNo: false,\n      hasSupport: false,\n    });\n    this.props.onChangeCheck('yes');\n  }\n\n  handleClickCheckNo() {\n    this.setState({\n      checkYes: false,\n      checkNo: true,\n      hasSupport: true,\n    });\n    this.props.onChangeCheck('no');\n  }\n\n  /**\n   *\n   * @param event\n   * @param cardId\n   */\n  handleChangeCardNumber(event, cardId) {\n    this.handleChangeAutoSuggestCardNumber(event.target.value, cardId);\n  }\n\n  /**\n   *\n   * @param cardnumber\n   * @param cardId\n   */\n  handleChangeAutoSuggestCardNumber(cardnumber, cardId) {\n    if (typeof cardnumber !== 'undefined') {\n      let cardNumberList = this.state.cardNumberList;\n      /*\n            if (cardnumber.substr(0, 1) !== '_') {\n              cardNumberList = new Map();\n            }\n      */\n      cardNumberList = cardNumberList.set(cardId, cardnumber);\n      this.setState({ cardNumberList });\n      this.props.changeCardNumber(this.props.orderitem.get('id'), cardnumber);\n    }\n  }\n\n  changeStatePopoverOpen() {\n    this.setState({ popoverOpen: !this.state.popoverOpen });\n  }\n\n  changeStatePopoverLinkOpen() {\n    this.setState({ popover2Open: !this.state.popover2Open });\n  }\n\n  /**\n   *\n   * @returns {*}\n   */\n  renderedContentCheckNo() {\n    return (this.state.checkNo\n        ?\n        (\n          <div className=\"msgCheckNo\">\n            <p>\n              <FormattedMessage id=\"rp.checkout.ordercustom.nokeycard\" defaultMessage=\"no card\" />\n            </p>\n          </div>\n        )\n        : ''\n    );\n  }\n\n  /**\n   *\n   * @param card\n   * @param index\n   * @returns {XML}\n   */\n  renderedLabelTab(card,index) {\n    const aux = `card${index}`;\n    let className = 'nav-item';\n\n    if (index === this.state.idCard) {\n      className = `${className} active`;\n    }\n\n    return (\n      <li className={className} key={index}>\n        <a\n          className=\"nav-link text-center\"\n          data-toggle=\"tab\"\n          role=\"tab\"\n          href={aux}\n          onClick={() => {\n            this.setState({\n              idCard: index,\n            });\n          }}\n        >{card}</a>\n      </li>\n    );\n  }\n\n  /**\n   *\n   * @param cardNumberList\n   * @param index\n   * @param card\n   * @returns {boolean}\n   */\n  verifyLengthKeycard(cardNumberList, index, card) {\n    const reg = new RegExp(/( )|(_)/g);\n    const cardNumber = cardNumberList.get(index).replace(reg, '');\n    const errorKey = 'data.cardNumber';\n    const { formatMessage } = this.props.intl;\n    const errorLabel = formatMessage({ id: 'rp.checkout.customize.cardnumber.length', defaultMessage: 'no lenght' });\n\n    switch (card) {\n      case tabKeycardType.sd: {\n        if (cardNumber.length < 25 ){\n          this.props.updateFieldsErrors(this.props.localItemInfo.get('id'), errorKey, errorLabel);\n          return false;\n        }\n        return true;\n        break;\n      };\n      case tabKeycardType.ta:\n      case tabKeycardType.alfi: {\n        if (cardNumber.length < 16){\n          this.props.updateFieldsErrors(this.props.localItemInfo.get('id'), errorKey, errorLabel);\n          return false;\n        }\n        return true;\n        break;\n      };\n      case tabKeycardType.open: {\n        if (cardNumber.length < 11){\n          this.props.updateFieldsErrors(this.props.localItemInfo.get('id'), errorKey, errorLabel);\n          return false;\n        }\n        return true;\n        break;\n      };\n      default: { break; };\n    }\n  }\n\n  /**\n   *\n   * @param card\n   * @param index\n   * @param cardNumberList\n   * @param keycards\n   * @param params\n   * @returns {XML}\n   */\n  renderedSomeInputKeyCards(card, index, cardNumberList, keycards, params) {\n    const aux = `tabKeycardType[card]${index}`;\n    let className = 'tab-pane fade in';\n    const cardNumber = cardNumberList.get(index, '');\n    let lengthKeycard = false;\n    const errorKey = 'data.cardNumber';\n    const { formatMessage } = this.props.intl;\n    const errorLabel = formatMessage({ id: 'rp.checkout.message.error.input.empty', defaultMessage: 'empty' });\n\n    if (index === this.state.idCard) {\n      className = `${className} active`;\n\n      if (cardNumber !== '') {\n        lengthKeycard = this.verifyLengthKeycard(cardNumberList, index, tabKeycardType[card]);\n        if ( lengthKeycard === true ) {\n          this.props.deleteKeyFieldsErrors(this.props.localItemInfo.get('id'), errorKey);\n        }\n      } else {\n        this.props.updateFieldsErrors(this.props.localItemInfo.get('id'), errorKey, errorLabel);\n      }\n      this.props.changeCardNumber(this.props.localItemInfo.get('id'), cardNumber);\n      this.props.setTypeCard(this.props.localItemInfo.get('id'), card);\n    }\n\n    return (\n      <div className={className} id={aux} role=\"tabpanel\" key={index}>\n        <CardNumberField\n          key={index}\n          id={index}\n          mode={tabKeycardType[card]}\n          keycards={keycards}\n          handleChangeCardNumber={(event) => {\n            this.handleChangeCardNumber(event, index);\n          }}\n          onChange={(event) => {\n            this.handleChangeCardNumber(event, index);\n          }}\n          onAutoSuggestSelected={(cardnumber) => {\n            this.handleChangeAutoSuggestCardNumber(cardnumber, index);\n          }}\n          cardNumber={cardNumber}\n          value={cardNumber}\n          params={params}\n        />\n        { cardNumber === '' || lengthKeycard === false ? KeyCardArea.renderedErrorInputMessage(errorKey, this.props.localItemInfo) : '' }\n      </div>\n    );\n  }\n\n  /**\n   *\n   * @param card\n   * @param index\n   * @param cardNumberList\n   * @param keycards\n   * @param params\n   * @returns {XML}\n   */\n  renderedOneInputKeyCard(card, index, cardNumberList, keycards, params) {\n    let cardNumber = cardNumberList.get(index, '');\n    this.props.setTypeCard(this.props.localItemInfo.get('id'), card);\n\n    let lengthKeycard = false;\n    const errorKey = 'data.cardNumber';\n    const { formatMessage } = this.props.intl;\n    const errorLabel = formatMessage({ id: 'rp.checkout.message.error.input.empty', defaultMessage: 'empty' });\n\n    if (cardNumber !== '') {\n      lengthKeycard = this.verifyLengthKeycard(cardNumberList, index, tabKeycardType[card]);\n\n      if ( lengthKeycard === true ) {\n        this.props.deleteKeyFieldsErrors(this.props.localItemInfo.get('id'), errorKey);\n      }\n    } else {\n      this.props.updateFieldsErrors(this.props.localItemInfo.get('id'), errorKey, errorLabel);\n    }\n\n    return (\n      <div>\n        <CardNumberField\n          key={index}\n          id={index}\n          mode={tabKeycardType[card]}\n          keycards={keycards}\n          handleChangeCardNumber={(event) => {\n            this.handleChangeCardNumber(event, index);\n          }}\n          onChange={(event) => {\n            this.handleChangeCardNumber(event, index);\n          }}\n          onAutoSuggestSelected={(cardnumber) => {\n            this.handleChangeAutoSuggestCardNumber(cardnumber, index);\n          }}\n          cardNumber={cardNumber.toUpperCase()}\n          value={cardNumber}\n          params={params}\n        />\n        { cardNumber === '' || lengthKeycard === false ? KeyCardArea.renderedErrorInputMessage(errorKey, this.props.localItemInfo) : '' }\n      </div>\n    );\n  }\n\n  /**\n   *\n   * @param keycardTypes\n   * @param cardNumberList\n   * @param keycards\n   * @param params\n   * @returns {XML}\n   */\n  renderedListKeyCard(keycardTypes, cardNumberList, keycards, params) {\n\n    return (keycardTypes.size > 1\n        ?\n        (\n          <div>\n            <ul className=\"nav nav-tabs nav-justified responsive-tabs\" role=\"tablist\">\n              {\n                keycardTypes.map((card,index) => (this.renderedLabelTab(tabKeycardType[card],index)))\n              }\n            </ul>\n            <div className=\"tab-content\">\n              {\n                keycardTypes.map((card,index) => (\n                  this.renderedSomeInputKeyCards(card, index, cardNumberList, keycards, params)))\n              }\n            </div>\n          </div>\n        )\n        :\n        (\n          keycardTypes.map((card,index) => (\n            this.renderedOneInputKeyCard(card, index, cardNumberList, keycards, params)))\n        )\n    );\n  }\n\n  /**\n   *\n   * @param keycardTypes\n   * @param cardNumberList\n   * @param keycards\n   * @param params\n   * @returns {*}\n   */\n  renderedContentCheckYes(keycardTypes, cardNumberList, keycards, params) {\n    return (this.state.checkYes\n        ? (\n          <div className=\"msgCheckYes\">\n            { this.renderedListKeyCard(keycardTypes, cardNumberList, keycards, params) }\n            { this.renderedLabelLinkPopover() }\n          </div>\n        ) : ''\n    );\n  }\n\n  renderedLabelLinkPopover() {\n    return this.props.popoverLink.get('labelKeycardInfo') !== null\n      ?\n      <div>\n        <a href=\"#\" className=\"infoKeyCard\" id=\"PopoverLink\" onClick={this.changeStatePopoverLinkOpen}>\n          <span>{this.props.popoverLink.get('labelKeycardInfo')}</span>\n        </a>\n        <Popover placement=\"bottom\" isOpen={this.state.popover2Open} target=\"PopoverLink\" toggle={this.changeStatePopoverLinkOpen} className=\"ppPopover\">\n          <PopoverHeader className=\"popover-title ppHeader\">\n            {this.props.popoverLink.get('popoverTitleKeycardInfo')}\n          </PopoverHeader>\n          <PopoverBody className=\"popover-content ppBody\">\n            <div className=\"row\">\n              <div className=\"col-xs-4\">\n                <img className=\"img-responsive\" src={this.props.popoverLink.get('picKeycardInfo')} alt=\"\" />\n              </div>\n              <div className=\"col-xs-8\" dangerouslySetInnerHTML={{ __html: this.props.popoverLink.get('descKeycardInfo') }} />\n            </div>\n          </PopoverBody>\n        </Popover>\n      </div>\n      : ''\n  }\n\n\n\n  /**\n   *\n   * @returns {XML}\n   */\n  questionImageSvg() {\n    return (\n      <svg x=\"0px\"\n           y=\"0px\"\n           width=\"15px\"\n           height=\"15px\"\n           viewBox=\"0 0 612 612\"\n           fill=\"#B8B8B8\"\n      >\n        <g>\n          <g>\n            <path d=\"M230.724,181.208c-2.393,2.587-3.95,4.256-5.119,5.508C227.775,184.379,230.724,181.208,230.724,181.208z\"/>\n            <path d=\"M336.962,200.875c7.956,9.792,11.906,21.337,11.906,34.634c0,9.514-2.727,18.666-8.151,27.512\n              c-2.977,5.007-6.898,9.848-11.795,14.465l-16.301,16.107c-15.634,15.356-25.732,28.958-30.35,40.865\n              c-4.618,11.878-6.927,27.54-6.927,46.957h36.275c0-17.108,1.947-30.044,5.814-38.807c3.866-8.763,12.323-19.444,25.37-32.102\n              c17.942-17.387,29.849-30.572,35.746-39.53s8.874-20.641,8.874-35.051c0-23.756-8.039-43.285-24.146-58.585\n              c-16.106-15.3-37.526-22.922-64.288-22.922c-28.931,0-51.686,8.929-68.266,26.789s-24.87,41.449-24.87,70.797h36.275\n              c0.667-17.665,3.478-31.184,8.346-40.559c8.679-16.83,24.369-25.259,47.068-25.259\n              C315.875,186.187,329.033,191.083,336.962,200.875z\"/>\n            <path d=\"M612,306C612,137.004,474.995,0,306,0C137.004,0,0,137.004,0,306c0,168.995,137.004,306,306,306\n              C474.995,612,612,474.995,612,306z M27.818,306C27.818,152.36,152.36,27.818,306,27.818S584.182,152.36,584.182,306\n              S459.64,584.182,306,584.182S27.818,459.64,27.818,306z\"/>\n            <rect x=\"274.51\" y=\"415.214\" width=\"40.559\" height=\"42.367\"/>\n          </g>\n        </g>\n      </svg>\n    );\n  }\n\n  render() {\n    const { keycardTypes, keycards, params, itemFieldsDefinition, popover, localItemInfo } = this.props;\n    const { cardNumberList, hasSupport } = this.state;\n\n    let checkSupportYes = '';\n    let checkSupportNo = '';\n    if (hasSupport) {\n      checkSupportNo = 'checked';\n    } else {\n      checkSupportYes = 'checked';\n    }\n\n    return (\n      <div>\n        <div className=\"blockPopover\">\n          <p><FormattedMessage id=\"rp.checkout.keycard.area.question\" defaultMessage=\"I have a card\" /></p>\n          <div className=\"contentPopover\">\n            <Button type=\"button\" id=\"Popover1\" className=\"contentQuestion\" onClick={this.changeStatePopoverOpen}>\n              {this.questionImageSvg()}\n            </Button>\n            <Popover placement=\"bottom\" isOpen={this.state.popoverOpen} target=\"Popover1\" toggle={this.changeStatePopoverOpen} className=\"ppPopover\">\n              <PopoverHeader className=\"popover-title ppHeader\">\n                {popover.get('keycardTitle')}\n              </PopoverHeader>\n              <PopoverBody className=\"popover-content ppBody\">\n                <div className=\"row\">\n                  <div className=\"col-xs-4\">\n                    <img className=\"img-responsive\" src={popover.get('keycardPicture')} alt=\"keycardinfo\" />\n                  </div>\n                  <div className=\"col-xs-8\" dangerouslySetInnerHTML={{ __html: popover.get('keycardContent') }} />\n                </div>\n              </PopoverBody>\n            </Popover>\n          </div>\n          <form>\n            <div className=\"form-group keyCardAreaForm\">\n              {itemFieldsDefinition.get('keycard').get('forceReloading') === false ?\n                (\n                  <div>\n                    <input type=\"radio\" id={`inputCheckYes${this.props.orderitem.get('id')}`} name=\"card\" checked={checkSupportYes} value=\"yes\" onChange={() => { this.handleClickCheckYes(); }} />\n                    <label htmlFor={`inputCheckYes${this.props.orderitem.get('id')}`} className=\"keycardChoice\"><FormattedMessage id=\"rp.checkout.keycard.area.reponse.yes\" defaultMessage=\"yes\" /></label>\n                    <input type=\"radio\" id={`inputCheckNo${this.props.orderitem.get('id')}`} name=\"card\" value=\"non\" checked={checkSupportNo} onChange={() => {  this.handleClickCheckNo(); }} />\n                    <label htmlFor={`inputCheckNo${this.props.orderitem.get('id')}`} className=\"keycardChoice\"><FormattedMessage id=\"rp.checkout.keycard.area.reponse.no\" defaultMessage=\"no\" /></label>\n                  </div>\n                )\n                : this.renderedContentCheckYes(keycardTypes, cardNumberList, keycards, params)\n              }\n\n              { this.renderedContentCheckNo() }\n              { this.renderedContentCheckYes(keycardTypes, cardNumberList, keycards, params) }\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nKeyCardArea.propTypes = {\n  keycardTypes: PropTypes.object.isRequired, // keycards to display the tabs\n  keycards: PropTypes.object.isRequired,\n  params: PropTypes.object.isRequired, // generic params\n  orderitem: PropTypes.object.isRequired,\n  itemFieldsDefinition: PropTypes.object.isRequired,\n  changeCardNumber: PropTypes.func.isRequired, // function to change cardnumber of item\n  intl: intlShape.isRequired, // for the internationalization\n  onChangeCheck: PropTypes.func.isRequired,\n  popover: PropTypes.object.isRequired, // content for popover info keycard\n  popoverLink: PropTypes.object.isRequired, // content for popover link keycard\n  hasSupport: PropTypes.bool.isRequired,\n  localItemInfo: PropTypes.object.isRequired,\n  updateFieldsErrors: PropTypes.func.isRequired, // function to update fields errors\n  deleteKeyFieldsErrors: PropTypes.func.isRequired, // function to delete key on fields errors\n  setTypeCard: PropTypes.func.isRequired, // function to set type card on a item (orderitem)\n};\n\nexport default injectIntl(KeyCardArea);\n"]}