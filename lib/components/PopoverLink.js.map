{"version":3,"sources":["../../src/components/PopoverLink.jsx"],"names":["PopoverLink","props","state","popoverLinkOpen","changeStatePopoverLinkOpen","bind","setState","index","popoverLink","get","__html","React","Component","propTypes","PropTypes","object","isRequired","number"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;IAGMA,W;;;;;AACJ;;;;AAIA,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,eAAe,EAAE;AADN,KAAb;AAGA,UAAKC,0BAAL,GAAkC,MAAKA,0BAAL,CAAgCC,IAAhC,+BAAlC;AANiB;AAOlB;AAED;;;;;;;iDAG6B;AAC3B,WAAKC,QAAL,CAAc;AAAEH,QAAAA,eAAe,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAA/B,OAAd;AACD;;;6BAEQ;AAAA,UACCI,KADD,GACW,KAAKN,KADhB,CACCM,KADD;AAEP,0BACE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE;AAAG,QAAA,IAAI,EAAC,GAAR;AAAY,QAAA,SAAS,EAAC,aAAtB;AAAoC,QAAA,EAAE,uBAAgBA,KAAhB,CAAtC;AAA+D,QAAA,OAAO,EAAE,KAAKH;AAA7E,sBACE,8CAAO,KAAKH,KAAL,CAAWO,WAAX,CAAuBC,GAAvB,CAA2B,kBAA3B,CAAP,CADF,CADF,eAIE,gCAAC,mBAAD;AAAS,QAAA,SAAS,EAAC,QAAnB;AAA4B,QAAA,MAAM,EAAE,KAAKP,KAAL,CAAWC,eAA/C;AAAgE,QAAA,MAAM,uBAAgBI,KAAhB,CAAtE;AAA+F,QAAA,MAAM,EAAE,KAAKH,0BAA5G;AAAwI,QAAA,SAAS,EAAC;AAAlJ,sBACE,gCAAC,yBAAD;AAAe,QAAA,SAAS,EAAC;AAAzB,SACG,KAAKH,KAAL,CAAWO,WAAX,CAAuBC,GAAvB,CAA2B,yBAA3B,CADH,CADF,eAIE,gCAAC,uBAAD;AAAa,QAAA,SAAS,EAAC;AAAvB,sBACE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAgC,QAAA,GAAG,EAAE,KAAKR,KAAL,CAAWO,WAAX,CAAuBC,GAAvB,CAA2B,gBAA3B,CAArC;AAAmF,QAAA,GAAG,EAAC;AAAvF,QADF,CADF,eAIE;AAAK,QAAA,SAAS,EAAC,UAAf;AAA0B,QAAA,uBAAuB,EAAE;AAAEC,UAAAA,MAAM,EAAE,KAAKT,KAAL,CAAWO,WAAX,CAAuBC,GAAvB,CAA2B,iBAA3B;AAAV;AAAnD,QAJF,CADF,CAJF,CAJF,CADF;AAoBD;;;;EA3CuBE,kBAAMC,S;;AA8ChCZ,WAAW,CAACa,SAAZ,GAAwB;AACtBL,EAAAA,WAAW,EAAEM,qBAAUC,MAAV,CAAiBC,UADR;AACoB;AAC1CT,EAAAA,KAAK,EAAEO,qBAAUG,MAAV,CAAiBD;AAFF,CAAxB;eAKehB,W","sourcesContent":["import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { Popover, PopoverHeader, PopoverBody } from 'reactstrap';\n\n/**\n * PopoverLink\n */\nclass PopoverLink extends React.Component {\n  /**\n   * Constructor\n   * @param props\n   */\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      popoverLinkOpen: false,\n    };\n    this.changeStatePopoverLinkOpen = this.changeStatePopoverLinkOpen.bind(this);\n  }\n\n  /**\n   * Change local state for open popover link\n   */\n  changeStatePopoverLinkOpen() {\n    this.setState({ popoverLinkOpen: !this.state.popoverLinkOpen });\n  }\n\n  render() {\n    const { index } = this.props;\n    return (\n      <div className=\"contentInfoKeycard\">\n        <a href=\"#\" className=\"infoKeyCard\" id={`PopoverLink${index}`} onClick={this.changeStatePopoverLinkOpen}>\n          <span>{this.props.popoverLink.get('labelKeycardInfo')}</span>\n        </a>\n        <Popover placement=\"bottom\" isOpen={this.state.popoverLinkOpen} target={`PopoverLink${index}`} toggle={this.changeStatePopoverLinkOpen} className=\"ppPopover\">\n          <PopoverHeader className=\"popover-title ppHeader\">\n            {this.props.popoverLink.get('popoverTitleKeycardInfo')}\n          </PopoverHeader>\n          <PopoverBody className=\"popover-content ppBody\">\n            <div className=\"row\">\n              <div className=\"col-xs-4\">\n                <img className=\"img-responsive\" src={this.props.popoverLink.get('picKeycardInfo')} alt=\"\" />\n              </div>\n              <div className=\"col-xs-8\" dangerouslySetInnerHTML={{ __html: this.props.popoverLink.get('descKeycardInfo') }} />\n            </div>\n          </PopoverBody>\n        </Popover>\n      </div>\n    );\n  }\n}\n\nPopoverLink.propTypes = {\n  popoverLink: PropTypes.object.isRequired, // content for popover info keycard\n  index: PropTypes.number.isRequired,\n};\n\nexport default PopoverLink;\n"],"file":"PopoverLink.js"}