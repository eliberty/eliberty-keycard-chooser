{"version":3,"sources":["../../src/components/KeycardChooser.jsx"],"names":["KeycardChooser","props","name","localItemInfo","get","keycardTypes","keycards","params","orderitem","changeCardNumber","onChangeCheck","itemFieldsDefinition","popover","popoverLink","hasSupport","updateFieldsErrors","deleteKeyFieldsErrors","setTypeCard","propTypes","object","isRequired","func","bool"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;AACA;;AAEA,IAAMA,iBAAiB,SAAjBA,cAAiB,CAACC,KAAD;AAAA,SACrB;AAAA;AAAA;AACE;AAAA;AAAA;AAAKA,YAAMC;AAAX,KADF;AAEE;AACE,WAAKD,MAAME,aAAN,CAAoBC,GAApB,CAAwB,OAAxB,CADP;AAEE,oBAAcH,MAAMI,YAFtB;AAGE,gBAAUJ,MAAMK,QAHlB;AAIE,cAAQL,MAAMM,MAJhB;AAKE,iBAAWN,MAAMO,SALnB;AAME,wBAAkBP,MAAMQ,gBAN1B;AAOE,qBAAeR,MAAMS,aAPvB;AAQE,4BAAsBT,MAAMU,oBAR9B;AASE,eAASV,MAAMW,OATjB;AAUE,mBAAaX,MAAMY,WAVrB;AAWE,kBAAYZ,MAAMa,UAXpB;AAYE,qBAAeb,MAAME,aAZvB;AAaE,0BAAoBF,MAAMc,kBAb5B;AAcE,6BAAuBd,MAAMe,qBAd/B;AAeE,mBAAaf,MAAMgB;AAfrB;AAFF,GADqB;AAAA,CAAvB;;AAuBAjB,eAAekB,SAAf,GAA2B;AACzBb,gBAAc,oBAAUc,MAAV,CAAiBC,UADN;AAEzBd,YAAU,oBAAUa,MAAV,CAAiBC,UAFF;AAGzBb,UAAQ,oBAAUY,MAAV,CAAiBC,UAHA;AAIzBZ,aAAW,oBAAUW,MAAV,CAAiBC,UAJH;AAKzBT,wBAAsB,oBAAUQ,MAAV,CAAiBC,UALd;AAMzBX,oBAAkB,oBAAUY,IAAV,CAAeD,UANR;AAOzBV,iBAAe,oBAAUW,IAAV,CAAeD,UAPL;AAQzBR,WAAS,oBAAUO,MAAV,CAAiBC,UARD,EAQa;AACtCP,eAAa,oBAAUM,MAAV,CAAiBC,UATL,EASiB;AAC1CN,cAAY,oBAAUQ,IAAV,CAAeF,UAVF;AAWzBjB,iBAAe,oBAAUgB,MAAV,CAAiBC,UAXP;AAYzBL,sBAAoB,oBAAUM,IAAV,CAAeD,UAZV,EAYsB;AAC/CJ,yBAAuB,oBAAUK,IAAV,CAAeD,UAbb,EAayB;AAClDH,eAAa,oBAAUI,IAAV,CAAeD,UAdH,CAce;AAdf,CAA3B;;kBAiBepB,c","file":"KeycardChooser.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyCardArea from './KeyCardArea/KeyCardArea';\nimport {updateFieldsErrors} from \"../../../../app/redux/actions/actions\";\n// import '../../node_modules/bootstrap-sass/assets/stylesheets/_bootstrap.scss';\n// import '../../node_modules/bootstrap-sass/assets/javascripts/bootstrap';\n\nconst KeycardChooser = (props) => (\n  <div>\n    <h1>{props.name}</h1>\n    <KeyCardArea\n      key={props.localItemInfo.get('index')}\n      keycardTypes={props.keycardTypes}\n      keycards={props.keycards}\n      params={props.params}\n      orderitem={props.orderitem}\n      changeCardNumber={props.changeCardNumber}\n      onChangeCheck={props.onChangeCheck}\n      itemFieldsDefinition={props.itemFieldsDefinition}\n      popover={props.popover}\n      popoverLink={props.popoverLink}\n      hasSupport={props.hasSupport}\n      localItemInfo={props.localItemInfo}\n      updateFieldsErrors={props.updateFieldsErrors}\n      deleteKeyFieldsErrors={props.deleteKeyFieldsErrors}\n      setTypeCard={props.setTypeCard}\n    />\n  </div>\n);\n\nKeycardChooser.propTypes = {\n  keycardTypes: PropTypes.object.isRequired,\n  keycards: PropTypes.object.isRequired,\n  params: PropTypes.object.isRequired,\n  orderitem: PropTypes.object.isRequired,\n  itemFieldsDefinition: PropTypes.object.isRequired,\n  changeCardNumber: PropTypes.func.isRequired,\n  onChangeCheck: PropTypes.func.isRequired,\n  popover: PropTypes.object.isRequired, // content for popover info keycard\n  popoverLink: PropTypes.object.isRequired, // content for popover link keycard\n  hasSupport: PropTypes.bool.isRequired,\n  localItemInfo: PropTypes.object.isRequired,\n  updateFieldsErrors: PropTypes.func.isRequired, // function to update fields errors\n  deleteKeyFieldsErrors: PropTypes.func.isRequired, // function to delete key on fields errors\n  setTypeCard: PropTypes.func.isRequired, // function to set type card on a item (orderitem)\n};\n\nexport default KeycardChooser;\n"]}