{"version":3,"sources":["../../src/helpers/PaneHelper.jsx"],"names":["paneIsOpen","orderitem","localItems","orderitemId","get","has","localItem","getSkiersList","contact","params","map","skier","getSkierData","push","skierMap","Map","id","lastname","firstname","birthdate","pictureurl","set","getKeycardsList","contactKeycardsList","prepareContactKeycards","finalKeycards","List","forEach","contactKeycard","loopContact","keycardnumber","cardNumber","index","findIndex","value","update","cardnumber","contacts","keycardnumbers"],"mappings":"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","sourcesContent":["import { Map, List } from 'immutable';\n\n/**\n * Check if a pane is opened\n * @param orderitem\n * @param localItems\n * @returns {boolean}\n */\nexport function paneIsOpen(orderitem, localItems) {\n  const orderitemId = orderitem.get('skierIndex');\n  if (!localItems.has(orderitemId)) {\n    return true;\n  }\n  const localItem = localItems.get(orderitemId);\n  if (!localItem.has('open')) {\n    return true;\n  }\n  return localItem.get('open');\n}\n\n/**\n * Build skiers list\n * @param contact\n * @returns {string}\n */\nexport function getSkiersList(contact, params) {\n  return contact\n    .get('skiers')\n    .map(skier => getSkierData(skier, params))\n    .push(getSkierData(contact, params));\n}\n\n/**\n * Prepare skier data exposed\n * @param skier\n * @returns {*}\n */\nfunction getSkierData(skier, params) {\n  const skierMap = new Map({\n    id: skier.get('id'),\n    lastname: skier.get('lastname'),\n    firstname: skier.get('firstname'),\n    birthdate: skier.get('birthdate'),\n    pictureurl: skier.get('pictureurl', ''),\n  });\n\n  if (!skier.has('lastkeycard')\n    || !skier.get('lastkeycard').has('keycardNumber')\n    || params.get('displayLastUsedKeycard') === false) {\n    return skierMap;\n  }\n\n  return skierMap.set('keycard', skier.get('lastkeycard').get('keycardNumber'));\n}\n\n/**\n * Get keycards list\n *\n * @param contact\n */\nexport function getKeycardsList(contact) {\n  // Prepare smart contact list\n  const contactKeycardsList = contact\n    .get('skiers')\n    .map(skier => (prepareContactKeycards(skier))) // add skiers data\n    .push(prepareContactKeycards(contact)); // add main contact data\n\n  let finalKeycards = new List();\n  contactKeycardsList.forEach((contactKeycard) => {\n    const loopContact = contactKeycard.get('contact');\n    contactKeycard.get('keycardnumbers', new List()).forEach((keycardnumber) => {\n      const cardNumber = keycardnumber.get('cardNumber');\n\n      const index = finalKeycards.findIndex((value) => {\n        return value.get('cardnumber') === cardNumber;\n      });\n\n      if (index >= 0) {\n        finalKeycards = finalKeycards.update(index, value => (\n          value.set('contacts', value.get('contacts').push(loopContact))\n        ));\n      } else {\n        finalKeycards = finalKeycards.push(new Map({\n          cardnumber: cardNumber,\n          contacts: new List().push(loopContact),\n        }));\n      }\n    });\n  });\n\n  return finalKeycards;\n}\n\n/**\n * Prepare keycard contact structure\n *\n * @param contact\n * @returns {Immutable.Map}\n */\nfunction prepareContactKeycards(contact) {\n  return new Map({\n    contact: {\n      id: contact.get('id'),\n      lastname: contact.get('lastname'),\n      firstname: contact.get('firstname'),\n      birthdate: contact.get('birthdate'),\n    },\n    keycardnumbers: contact.get('keycardnumbers', new List()),\n  });\n}\n\n"],"file":"PaneHelper.js"}