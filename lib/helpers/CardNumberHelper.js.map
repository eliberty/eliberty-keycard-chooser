{"version":3,"sources":["../../src/helpers/CardNumberHelper.jsx"],"names":["cardNumberFormatIsValid","localItemInfo","currentCardNumberType","console","log","toJS"],"mappings":";;;;;QAWgBA,uB,GAAAA,uB;;AAXhB;;AAMA;;;;;AAKO,SAASA,uBAAT,CAAiCC,aAAjC,EAAgD;AACrD,MAAMC,wBAAwB,8CAAyBD,aAAzB,CAA9B;AACAE,UAAQC,GAAR,CAAY,uBAAZ,EAAqCF,qBAArC;AACAC,UAAQC,GAAR,CAAY,eAAZ,EAA6BH,cAAcI,IAAd,EAA7B;AACA,UAAQH,qBAAR;AACE,SAAK,IAAL;AACA,SAAK,IAAL;AACA,SAAK,MAAL;AACE,aAAO,sDAAiCD,aAAjC,EAAgDC,qBAAhD,EAAuE,aAAvE,CAAP;AACF,SAAK,WAAL;AACE,aAAO,8CAAyBD,aAAzB,EAAwC,aAAxC,KACF,8CAAyBA,aAAzB,EAAwC,oBAAxC,CADE,IAEF,8CAAyBA,aAAzB,EAAwC,SAAxC,CAFL;AAGF;AACE,aAAO,KAAP;AAVJ;AAYD","file":"CardNumberHelper.js","sourcesContent":["import {\n  getCurrentCardNumberType,\n  getCardNumberTypeElementProperty,\n  isSwissPassPropertyValid,\n} from './CardTypeHelper';\n\n/**\n * Return if the current cardNumber are a valid format\n *\n * @param localItemInfo\n */\nexport function cardNumberFormatIsValid(localItemInfo) {\n  const currentCardNumberType = getCurrentCardNumberType(localItemInfo);\n switch (currentCardNumberType) {\n    case 'sd':\n    case 'ta':\n    case 'open':\n      return getCardNumberTypeElementProperty(localItemInfo, currentCardNumberType, 'formatValid');\n    case 'swisspass':\n      return isSwissPassPropertyValid(localItemInfo, 'formatValid')\n        && isSwissPassPropertyValid(localItemInfo, 'zipcodeFormatValid')\n        && isSwissPassPropertyValid(localItemInfo, 'checked');\n    default:\n      return false;\n  }\n}\n"]}
