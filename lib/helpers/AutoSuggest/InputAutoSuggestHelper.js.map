{"version":3,"sources":["../../../src/helpers/AutoSuggest/InputAutoSuggestHelper.jsx"],"names":["escapeRegexCharacters","getSuggestions","getSuggestionValue","renderSuggestion","renderInputComponent","str","replace","value","skiers","params","escapedValue","trim","length","get","regex","RegExp","filter","test","skier","lastname","firstname","getHightlightNameDisplay","text","query","rgObj","exec","findPosition","index","start","substr","highlight","end","birthdate","format","keycard","undefined","inputProps"],"mappings":"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","file":"InputAutoSuggestHelper.js","sourcesContent":["import React from 'react';\nimport moment from 'moment/src/moment';\n\nexport function escapeRegexCharacters(str) {\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\nexport function getSuggestions(value, skiers, params) {\n  const escapedValue = escapeRegexCharacters(value.trim());\n\n  if (escapedValue.length < params.get('minContactLengthAutoComplete', 0)) {\n    return [];\n  }\n\n  if (escapedValue === '') {\n    return skiers;\n  }\n\n  const regex = new RegExp(escapedValue, 'i');\n\n  return skiers.filter(skier => regex.test(skier.lastname) || regex.test(skier.firstname));\n}\n\nexport function getSuggestionValue(skier) {\n  return skier.firstname;\n}\n\n/**\n * Render a suggestion display with highlight search string\n *\n * @param text\n * @param query\n * @returns {*}\n */\nfunction getHightlightNameDisplay(text, query) {\n  const regex = new RegExp(query, 'i');\n  const rgObj = regex.exec(text);\n\n  if (rgObj === null) {\n    return text;\n  }\n  const findPosition = rgObj.index;\n\n  const start = findPosition > 0 ? text.substr(0, findPosition) : '';\n  const highlight = text.substr(findPosition, query.length);\n  const end = text.substr(findPosition + query.length);\n\n  return (\n    <span>\n      <span key=\"start\">{start}</span>\n      <span key=\"hightlight\" className=\"react-autosuggest__suggestion-match\">{highlight}</span>\n      <span key=\"end\">{end}</span>\n    </span>\n  );\n}\n\n/**\n * Render a suggestion display\n *\n * @param skier\n * @param query\n * @returns {XML}\n */\nexport function renderSuggestion(skier, { query }) {\n  return (\n    <span className=\"skier_wrapper\">\n      <span className=\"suggestion_skier\">\n        {getHightlightNameDisplay(skier.firstname, query)}\n        &nbsp;\n        {getHightlightNameDisplay(skier.lastname, query)}\n        &nbsp;<span className=\"suggestion_birthdate\">né(e) le {moment(skier.birthdate).format('DD/MM/YYYY')}</span>\n      </span>\n      {\n        skier.keycard !== undefined && skier.keycard !== ''\n          ? <span className=\"suggestion_keycard\">→ Dernière carte utilisée {skier.keycard}</span>\n          : ''\n      }\n    </span>\n  );\n}\n\nexport function renderInputComponent(inputProps) {\n  return (\n    <div className=\"inputContainer\">\n      <input {...inputProps} />\n      <label htmlFor=\"firstName\" className=\"dropDown\">Prénom</label>\n    </div>\n  );\n}\n"]}