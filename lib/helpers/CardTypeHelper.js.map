{"version":3,"sources":["../../src/helpers/CardTypeHelper.jsx"],"names":["getCardNumberField","localItemInfo","get","Map","isSwissPassPropertyValid","property","getCardNumberTypeElement","isCurrentCardNumberType","type","getCurrentCardNumberType","getCurrentCardTypeElement","getCurrentCardNumberValue","currentCardTypeElement","getCardNumberTypes","List","getCardNumberTypeElementProperty","isCurrentCardNumberValid"],"mappings":";;;;;;;;;;;;;;;;AAAA;;AAEA;;;;;AAKO,SAASA,kBAAT,CAA4BC,aAA5B,EAA2C;AAChD,SAAOA,aAAa,CACjBC,GADI,CACA,QADA,EACU,IAAIC,cAAJ,EADV,EAEJD,GAFI,CAEA,YAFA,EAEc,IAAIC,cAAJ,EAFd,CAAP;AAGD;AAED;;;;;;;;AAMO,SAASC,wBAAT,CAAkCH,aAAlC,EAAiDI,QAAjD,EAA2D;AAChE,SAAOC,wBAAwB,CAACL,aAAD,EAAgB,WAAhB,CAAxB,CACJC,GADI,CACAG,QADA,EACU,KADV,CAAP;AAED;AAED;;;;;;;;;AAOO,SAASE,uBAAT,CAAiCN,aAAjC,EAAgDO,IAAhD,EAAsD;AAC3D,SAAOC,wBAAwB,CAACR,aAAD,CAAxB,KAA4CO,IAAnD;AACD;AAED;;;;;;;AAKO,SAASC,wBAAT,CAAkCR,aAAlC,EAAiD;AACtD,SAAOD,kBAAkB,CAACC,aAAD,CAAlB,CAAkCC,GAAlC,CAAsC,aAAtC,EAAqD,EAArD,CAAP;AACD;AAED;;;;;;;AAKO,SAASQ,yBAAT,CAAmCT,aAAnC,EAAkD;AACvD,SAAOK,wBAAwB,CAACL,aAAD,EAAgBQ,wBAAwB,CAACR,aAAD,CAAxC,CAA/B;AACD;AAED;;;;;;;;AAMO,SAASU,yBAAT,CAAmCV,aAAnC,EAAuE;AAAA,MAArBI,QAAqB,uEAAV,QAAU;AAC5E,MAAMO,sBAAsB,GAAGF,yBAAyB,CAACT,aAAD,CAAxD;AACA,SAAOW,sBAAsB,CAACV,GAAvB,CAA2BG,QAA3B,EAAqC,EAArC,CAAP;AACD;AAED;;;;;;;AAKO,SAASQ,kBAAT,CAA4BZ,aAA5B,EAA2C;AAChD,SAAOD,kBAAkB,CAACC,aAAD,CAAlB,CAAkCC,GAAlC,CAAsC,OAAtC,EAA+C,IAAIY,eAAJ,EAA/C,CAAP;AACD;AAED;;;;;;;;AAMO,SAASR,wBAAT,CAAkCL,aAAlC,EAAiDO,IAAjD,EAAuD;AAC5D,SAAOR,kBAAkB,CAACC,aAAD,CAAlB,CACJC,GADI,CACA,OADA,EACS,IAAIY,eAAJ,EADT,EAEJZ,GAFI,CAEAM,IAFA,EAEM,IAAIL,cAAJ,EAFN,CAAP;AAGD;AAED;;;;;;;;;AAOO,SAASY,gCAAT,CAA0Cd,aAA1C,EAAyDO,IAAzD,EAA+DH,QAA/D,EAAyE;AAC9E,SAAOC,wBAAwB,CAACL,aAAD,EAAgBO,IAAhB,CAAxB,CAA8CN,GAA9C,CAAkDG,QAAlD,CAAP;AACD;AAED;;;;;;;;AAMO,SAASW,wBAAT,CAAkCf,aAAlC,EAAiD;AACtD,SAAOS,yBAAyB,CAACT,aAAD,CAAzB,CAAyCC,GAAzC,CAA6C,aAA7C,EAA4D,KAA5D,KACFF,kBAAkB,CAACC,aAAD,CAAlB,CAAkCC,GAAlC,CAAsC,OAAtC,EAA+C,KAA/C,CADL;AAED","sourcesContent":["import { Map, List } from 'immutable';\n\n/**\n * Return the cardNumber field (properties)\n *\n * @param localItemInfo\n */\nexport function getCardNumberField(localItemInfo) {\n  return localItemInfo\n    .get('fields', new Map())\n    .get('cardNumber', new Map());\n}\n\n/**\n * Return if swissPass zipCode is valid\n *\n * @param localItemInfo\n * @param property\n */\nexport function isSwissPassPropertyValid(localItemInfo, property) {\n  return getCardNumberTypeElement(localItemInfo, 'swisspass')\n    .get(property, false);\n}\n\n/**\n * Check if current cardNumber type is corresponding to asked type\n *\n * @param localItemInfo\n * @param type\n * @returns {boolean}\n */\nexport function isCurrentCardNumberType(localItemInfo, type) {\n  return getCurrentCardNumberType(localItemInfo) === type;\n}\n\n/**\n * Get current cardNumber type\n *\n * @param localItemInfo\n */\nexport function getCurrentCardNumberType(localItemInfo) {\n  return getCardNumberField(localItemInfo).get('currentType', '');\n}\n\n/**\n * Get the current cardType element\n *\n * @param localItemInfo\n */\nexport function getCurrentCardTypeElement(localItemInfo) {\n  return getCardNumberTypeElement(localItemInfo, getCurrentCardNumberType(localItemInfo));\n}\n\n/**\n * Get cardNumber value by current type\n *\n * @param localItemInfo\n * @param property\n */\nexport function getCurrentCardNumberValue(localItemInfo, property = 'number') {\n  const currentCardTypeElement = getCurrentCardTypeElement(localItemInfo);\n  return currentCardTypeElement.get(property, '');\n}\n\n/**\n * Return the cardNumber types available\n *\n * @param localItemInfo\n */\nexport function getCardNumberTypes(localItemInfo) {\n  return getCardNumberField(localItemInfo).get('types', new List());\n}\n\n/**\n * Get cardType element\n *\n * @param localItemInfo\n * @param type\n */\nexport function getCardNumberTypeElement(localItemInfo, type) {\n  return getCardNumberField(localItemInfo)\n    .get('types', new List())\n    .get(type, new Map());\n}\n\n/**\n * Get cardNumber element property value\n *\n * @param localItemInfo\n * @param type\n * @param property\n */\nexport function getCardNumberTypeElementProperty(localItemInfo, type, property) {\n  return getCardNumberTypeElement(localItemInfo, type).get(property);\n}\n\n/**\n * Return if cardNumber is valid\n *\n * @param localItemInfo\n * @returns {*}\n */\nexport function isCurrentCardNumberValid(localItemInfo) {\n  return getCurrentCardTypeElement(localItemInfo).get('formatValid', false)\n    && getCardNumberField(localItemInfo).get('valid', false);\n}\n"],"file":"CardTypeHelper.js"}